name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "corretto"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      # 👇 단계별로 나누어서 문제 지점 파악
      - name: Check EC2 Connection
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          timeout: 30s
          script: |
            echo "=== EC2 연결 성공 ==="
            echo "현재 시간: $(date)"
            echo "현재 사용자: $(whoami)"
            echo "시스템 업타임: $(uptime)"
            echo "메모리 상태:"
            free -h
            echo "디스크 상태:"
            df -h
            echo "====================="

      - name: Prepare Application Directory
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          timeout: 30s
          script: |
            echo "=== 애플리케이션 디렉토리 준비 ==="
            sudo mkdir -p /home/ubuntu/app
            sudo chown ubuntu:ubuntu /home/ubuntu/app
            ls -la /home/ubuntu/app/
            echo "================================="

      - name: Stop Existing Application
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          timeout: 60s
          script: |
            echo "=== 기존 애플리케이션 중지 ==="
            echo "실행 중인 Java 프로세스 확인:"
            ps aux | grep java | grep -v grep || echo "실행 중인 Java 프로세스 없음"

            echo "Java 프로세스 종료 시도..."
            if pgrep -f 'java.*jar' > /dev/null; then
              pkill -f 'java.*jar'
              echo "프로세스 종료됨"
            else
              echo "종료할 프로세스 없음"
            fi

            echo "3초 대기..."
            sleep 3

            echo "종료 후 프로세스 확인:"
            ps aux | grep java | grep -v grep || echo "Java 프로세스 모두 종료됨"
            echo "=============================="

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          timeout: 300s
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app/"
          strip_components: 2

      - name: Verify JAR File
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          timeout: 30s
          script: |
            echo "=== JAR 파일 확인 ==="
            cd /home/ubuntu/app
            echo "디렉토리 내용:"
            ls -la
            echo "JAR 파일 상세:"
            ls -la *.jar 2>/dev/null || echo "JAR 파일 없음"
            echo "===================="

      - name: Start Application
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          timeout: 120s
          script: |
            echo "=== 애플리케이션 시작 ==="
            cd /home/ubuntu/app

            # 로그 파일 초기화
            > application.log

            echo "애플리케이션 시작 중..."
            nohup java -jar *.jar --spring.profiles.active=prod > application.log 2>&1 &

            echo "10초 대기 중..."
            sleep 10

            echo "프로세스 상태 확인:"
            if pgrep -f 'java.*jar' > /dev/null; then
              echo "✅ 애플리케이션이 성공적으로 시작되었습니다"
              echo "실행 중인 프로세스:"
              ps aux | grep java | grep -v grep
              echo "애플리케이션 로그 (최근 10줄):"
              tail -10 application.log
            else
              echo "❌ 애플리케이션 시작 실패"
              echo "전체 로그:"
              cat application.log
              echo "시스템 리소스 상태:"
              free -h
              df -h
              exit 1
            fi
            echo "========================="
