spring:
  application:
    name: waggle

  config:
    import: optional:file:.env[.properties]

  profiles:
    active: ${SPRING_ACTIVE_PROFILE}

  datasource:
    url: jdbc:mysql://${DB_CONTAINER_NAME}:${DB_EXTERNAL_PORT}/${DB_DATABASE}
    username: ${DB_USER}
    password: ${DB_PASSWORD}

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update

    defer-datasource-initialization: true
    open-in-view: false
    generate-ddl: true
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

          kakao:
            client-name: kakao
            authorization-grant-type: authorization_code
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email

          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
              - profile_image
              - birthyear
              - birthday
              - mobile
              - nickname
              - gender
            client-name: Naver
            authorization-grant-type: authorization_code

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
            jwk-set-uri: https://kapi.kakao.com/v1/user/keys

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  data:
    redis:
      port: ${REDIS_EXTERNAL_PORT}
      host: ${REDIS_CONTAINER_NAME}

jwt:
  secret: ${JWT_SECRET}
  access-token:
    expiration-time: ${JWT_ACCESS_TOKEN_EXPIRATION_TIME}
  refresh-token:
    expiration-time: ${JWT_REFRESH_TOKEN_EXPIRATION_TIME}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    operationsSorter: alpha
    disable-swagger-default-url: true
    display-request-duration: true
    oauth:
      client-id: ${NAVER_CLIENT_ID}
      client-secret: ${NAVER_CLIENT_SECRET}
      scopes:
        - name
        - email
        - profile_image
        - birthyear
        - birthday
        - mobile
        - nickname
        - gender
  api-docs:
    path: /api-docs
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

logging:
  level:
    org.springframework.web: DEBUG

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ${AWS_REGION}
    s3:
      bucket: ${AWS_BUCKET}
    stack:
      auto: false